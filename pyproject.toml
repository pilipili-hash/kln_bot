[tool.poetry]
name = "ncatbot-optimized"
version = "2.0.0"
description = "优化版的NcatBot QQ机器人项目"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{ include = "plugins" }, { include = "utils" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
# 核心依赖
ncatbot = ">=3.8.2"
aiofiles = "^24.1.0"
aiohttp = "^3.11.14"
aiosqlite = "^0.21.0"
websockets = "^10.4"

# 数据处理
beautifulsoup4 = "^4.13.4"
fuzzywuzzy = "^0.18.0"
httpx = "^0.28.1"
requests = "^2.32.3"
ruamel-base = "^1.0.0"

# 图像处理
Pillow = "^10.4"
PicImageSearch = "^3.12.4"

# 特定功能依赖
pixivpy3 = "^3.7.5"
jmcomic = "2.5.38"
img2pdf = "^0.6.1"

# 配置管理
pyyaml = "^6.0"
pydantic = "^2.0.0"

# 性能监控
psutil = "^5.9.0"

[tool.poetry.group.dev.dependencies]
# 开发工具
pytest = "^7.0"
pytest-asyncio = "^0.21.0"
mypy = "^1.0"
flake8 = "^5.0"
black = "^23.0"
isort = "^5.12"

# 类型检查
types-requests = "^2.31.0"
types-pyyaml = "^6.0.12"

[tool.poetry.group.test.dependencies]
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["ncatbot.*", "jmcomic.*", "PicImageSearch.*", "pixivpy3.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=plugins",
    "--cov=utils",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["plugins", "utils"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*", "*/venv/*", "*/env/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
